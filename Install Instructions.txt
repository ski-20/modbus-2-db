# Install Instructions

# This installs the Modbus logger and Web UI (Gunicorn) as systemd services.
# Paths are explicit (/home/YOURUSER/...). Replace YOURUSER/YOURGROUP everywhere.
# Web UI is bound to 0.0.0.0:8080 (LAN). Change to 127.0.0.1:8080 for local-only.


# ─────────────────────────────────────────────────────────────────────────────
# Step 0 — Prepare system & clone the repo
# ─────────────────────────────────────────────────────────────────────────────

# 0a) Install prerequisites (Debian/Ubuntu/Raspberry Pi OS):
#   > sudo apt update
#   > sudo apt install -y git python3 python3-venv python3-pip tzdata

# 0b) Create project layout & clone (run as your normal user, not root):
#   > mkdir -p /home/YOURUSER/plc_logger
#   > cd /home/YOURUSER/plc_logger
#   > git clone https://github.com/ski-20/modbus-2-db.git modbus-2-db
#   > mkdir -p /home/YOURUSER/plc_logger/data

# 0c) Create the Python virtualenv & install dependencies:
#   > python3 -m venv /home/YOURUSER/plc_logger/venv
#   > /home/YOURUSER/plc_logger/venv/bin/python -m pip install --upgrade pip
#   > /home/YOURUSER/plc_logger/venv/bin/pip install -r /home/YOURUSER/plc_logger/modbus-2-db/requirements.txt
#   (If on Python 3.8 and zoneinfo errors appear:)
#   > /home/YOURUSER/plc_logger/venv/bin/pip install backports.zoneinfo

# 0d) Configure the app:
#   > nano /home/YOURUSER/plc_logger/modbus-2-db/config.py
#   Make sure:
#     DB_ROOT  = "/home/YOURUSER/plc_logger/data"
#     LOCAL_TZ = "America/New_York"   # or your TZ
#     PLC_IP / PLC_PORT / SLAVE_ID / WORD_ORDER as needed
#     RETENTION = {
#       "total_cap_mb": 10000,    # 10 GB
#       "chunk_max_mb": 50,       # per-file target size (tune as desired)
#       # optional caps/family_overrides...
#     }

# 0e) Ensure Gunicorn entrypoint exists:
#   > nano /home/YOURUSER/plc_logger/modbus-2-db/wsgi.py
#   vv BEGIN FILE vv
#   from web import create_app
#   app = create_app()
#   ^^ END FILE ^^


# ─────────────────────────────────────────────────────────────────────────────
# Step 1 — Logger Service (systemd)
# ─────────────────────────────────────────────────────────────────────────────

# Create: /etc/systemd/system/plc-logger.service
# Replace YOURUSER/YOURGROUP below.
# vv BEGIN FILE vv
[Unit]
Description=PLC Modbus Logger
After=network-online.target
Wants=network-online.target

[Service]
User=YOURUSER
Group=YOURGROUP
WorkingDirectory=/home/YOURUSER/plc_logger/modbus-2-db

# Ensure project path exists & owned by service user before start
ExecStartPre=/bin/mkdir -p /home/YOURUSER/plc_logger/data
ExecStartPre=/bin/chown -R YOURUSER:YOURGROUP /home/YOURUSER/plc_logger

# Run the logger via the venv's Python
ExecStart=/home/YOURUSER/plc_logger/venv/bin/python /home/YOURUSER/plc_logger/modbus-2-db/logger.py

Environment=PYTHONUNBUFFERED=1

Restart=always
RestartSec=5

# Hardening
NoNewPrivileges=true
PrivateTmp=true
ProtectSystem=full
ProtectHome=false
ReadWritePaths=/home/YOURUSER/plc_logger

[Install]
WantedBy=multi-user.target
# ^^ END FILE ^^


# ─────────────────────────────────────────────────────────────────────────────
# Step 2 — Web UI (Gunicorn) Service (systemd)
# ─────────────────────────────────────────────────────────────────────────────

# Create: /etc/systemd/system/plc-web.service
# Replace YOURUSER/YOURGROUP below.
# vv BEGIN FILE vv
[Unit]
Description=PLC Logger Web UI (Gunicorn)
After=plc-logger.service network-online.target
Wants=plc-logger.service network-online.target

[Service]
User=YOURUSER
Group=YOURGROUP
WorkingDirectory=/home/YOURUSER/plc_logger/modbus-2-db

# Ensure paths/ownership are correct
ExecStartPre=/bin/mkdir -p /home/YOURUSER/plc_logger/data
ExecStartPre=/bin/chown -R YOURUSER:YOURGROUP /home/YOURUSER/plc_logger

# Run Gunicorn via the venv's Python (module form). No --factory. wsgi:app.
# Bind to all interfaces on 8080 (LAN). Change to 127.0.0.1:8080 for local-only.
ExecStart=/home/YOURUSER/plc_logger/venv/bin/python -m gunicorn \
  --workers 2 --threads 4 --timeout 120 \
  --bind 0.0.0.0:8080 \
  --chdir /home/YOURUSER/plc_logger/modbus-2-db \
  wsgi:app

Environment=PYTHONUNBUFFERED=1

Restart=always
RestartSec=5

# Hardening
NoNewPrivileges=true
PrivateTmp=true
ProtectSystem=full
ProtectHome=false
ReadWritePaths=/home/YOURUSER/plc_logger

[Install]
WantedBy=multi-user.target
# ^^ END FILE ^^


# ─────────────────────────────────────────────────────────────────────────────
# Step 3 — Enable & start
# ─────────────────────────────────────────────────────────────────────────────
#   > sudo systemctl daemon-reload
#   > sudo systemctl enable plc-logger.service
#   > sudo systemctl enable plc-web.service
#   > sudo systemctl start plc-logger.service
#   > sudo systemctl start plc-web.service


# ─────────────────────────────────────────────────────────────────────────────
# Step 4 — Verify
# ─────────────────────────────────────────────────────────────────────────────
# Status:
#   > sudo systemctl status plc-logger plc-web
# Logs (follow):
#   > sudo journalctl -u plc-logger -f
#   > sudo journalctl -u plc-web -f
# Browser:
#   http://<device-ip>:8080/
# Firewall (if needed):
#   > sudo ufw allow 8080/tcp


# ─────────────────────────────────────────────────────────────────────────────
# Step 5 — Update
# ─────────────────────────────────────────────────────────────────────────────
#   > cd /home/YOURUSER/plc_logger/modbus-2-db
#   > git pull
#   > /home/YOURUSER/plc_logger/venv/bin/pip install -r requirements.txt
#   > sudo systemctl daemon-reload
#   > sudo systemctl restart plc-logger plc-web


# ─────────────────────────────────────────────────────────────────────────────
# Step 6 — Common troubleshooting
# ─────────────────────────────────────────────────────────────────────────────
# A) “unable to open database file” / permission denied / CHDIR
#    - Unit files must use your correct User/Group.
#    - WorkingDirectory must be: /home/YOURUSER/plc_logger/modbus-2-db
#    - ProtectHome=false and ReadWritePaths=/home/YOURUSER/plc_logger must be present.
#    - Fix ownership:
#        > sudo chown -R YOURUSER:YOURGROUP /home/YOURUSER/plc_logger
#
# B) Gunicorn fails to start
#    - Ensure venv was created and requirements installed.
#    - Confirm module path:
#        /home/YOURUSER/plc_logger/venv/bin/python -c "import gunicorn; print(gunicorn.__file__)"
#    - wsgi.py must contain:
#        from web import create_app
#        app = create_app()
#
# C) Port 5000 already in use
#    - Change --bind in plc-web.service (e.g., 0.0.0.0:5001), then:
#        > sudo systemctl restart plc-web
