# Install Instructions (no EnvironmentFile)

# This installs the Modbus logger and Web UI (Gunicorn) as systemd services.
# Service paths use the service user’s HOME via %h:
#   %h/plc_logger/{modbus-2-db, data, venv}
# Edit only the User/Group lines in the unit files to match your account.

# The Web UI bind is hardcoded to 0.0.0.0:8080 (LAN). Change to 127.0.0.1:8080 for local-only.


# Step 0 — Prepare system & clone the repo

# 0a) Install prerequisites (Debian/Ubuntu/Raspberry Pi OS):
#   > sudo apt update
#   > sudo apt install -y git python3 python3-venv python3-pip tzdata

# 0b) Create project layout & clone (run as your normal user, not root):
#   > mkdir -p "$HOME/plc_logger"
#   > cd "$HOME/plc_logger"
#   > git clone https://github.com/ski-20/modbus-2-db.git modbus-2-db
#   > mkdir -p "$HOME/plc_logger/data"

# 0c) Create the Python virtualenv & install dependencies:
#   > python3 -m venv "$HOME/plc_logger/venv"
#   > "$HOME/plc_logger/venv/bin/python" -m pip install --upgrade pip
#   > "$HOME/plc_logger/venv/bin/pip" install -r "$HOME/plc_logger/modbus-2-db/requirements.txt"
#   (If on Python 3.8 and zoneinfo errors appear:)
#   > "$HOME/plc_logger/venv/bin/pip" install backports.zoneinfo


# Step 1 — Logger Service (systemd)

# Create the unit file: /etc/systemd/system/plc-logger.service
# IMPORTANT: Replace YOURUSER/YOURGROUP with your Linux username/group.
# vv BEGIN FILE vv
[Unit]
Description=PLC Modbus Logger
After=network-online.target
Wants=network-online.target

[Service]
User=YOURUSER
Group=YOURGROUP
WorkingDirectory=%h/plc_logger/modbus-2-db
Environment=PYTHONUNBUFFERED=1

# Ensure data dir exists before start
ExecStartPre=/usr/bin/mkdir -p %h/plc_logger/data

# Launch logger
ExecStart=%h/plc_logger/venv/bin/python %h/plc_logger/modbus-2-db/logger.py

Restart=always
RestartSec=5

# Basic hardening
NoNewPrivileges=true
PrivateTmp=true
ProtectSystem=full
ProtectHome=true
ReadWritePaths=%h/plc_logger

[Install]
WantedBy=multi-user.target
# ^^ END FILE ^^


# Step 2 — Web UI (Gunicorn) Service (systemd)

# Create the unit file: /etc/systemd/system/plc-web.service
# vv BEGIN FILE vv
[Unit]
Description=PLC Logger Web UI (Gunicorn)
After=plc-logger.service network-online.target
Wants=plc-logger.service network-online.target

[Service]
User=YOURUSER
Group=YOURGROUP
Environment=PYTHONUNBUFFERED=1
WorkingDirectory=%h/plc_logger/modbus-2-db

# Gunicorn: 2 workers, 4 threads each; adjust as needed
# LAN access (bind all interfaces):
ExecStart=%h/plc_logger/venv/bin/gunicorn \
  --workers 2 --threads 4 --timeout 120 \
  --bind 0.0.0.0:8080 \
  --chdir %h/plc_logger/modbus-2-db \
  'web:create_app()' --factory

# For local-only access instead, change the --bind above to:
#   --bind 127.0.0.1:8080

Restart=always
RestartSec=5

# Basic hardening
NoNewPrivileges=true
PrivateTmp=true
ProtectSystem=full
ProtectHome=true
ReadWritePaths=%h/plc_logger

[Install]
WantedBy=multi-user.target
# ^^ END FILE ^^


# Step 3 — Enable & start services

#   > sudo systemctl daemon-reload
#   > sudo systemctl enable plc-logger.service
#   > sudo systemctl enable plc-web.service
#   > sudo systemctl start plc-logger.service
#   > sudo systemctl start plc-web.service

# If using a firewall and you kept 0.0.0.0:8080 (LAN):
#   > sudo ufw allow 8080/tcp   # (if UFW is installed)


# Step 4 — Verification

#   Service status:
#     > sudo systemctl status plc-logger plc-web
#
#   Logs (tail):
#     > sudo journalctl -u plc-logger -n 100 --no-pager
#     > sudo journalctl -u plc-web -n 100 --no-pager
#
#   Open the web UI:
#     - http://<device-ip>:8080/
#     (or http://127.0.0.1:8080/ if you changed the bind to local-only)


# Step 5 — Configure the app (one-time check)

# Edit config.py to match your environment (DB root, timezone, caps):
#   > nano "$HOME/plc_logger/modbus-2-db/config.py"
#
# Ensure values such as:
#   DB_ROOT = "/home/YOURUSER/plc_logger/data"
#   LOCAL_TZ = "America/New_York"
#   RETENTION = {
#       "total_cap_mb": 10000,   # example 10 GB
#       "chunk_max_mb": 64,
#       # "caps": {"continuous": 8000, "conditional": 1500, "onchange": 500},
#   }


# Step 6 — Updating

# Pull latest code:
#   > cd "$HOME/plc_logger/modbus-2-db"
#   > git pull
#
# If requirements changed:
#   > source "$HOME/plc_logger/venv/bin/activate"
#   > pip install -r requirements.txt
#
# Restart services:
#   > sudo systemctl restart plc-logger plc-web
#
# Only run daemon-reload if you changed the unit files:
#   > sudo systemctl daemon-reload


# Troubleshooting

# - "bad unit file setting":
#     Make sure you replaced YOURUSER/YOURGROUP in BOTH units.
# - Permissions writing to data dir:
#     > sudo chown -R YOURUSER:YOURGROUP "$HOME/plc_logger"
# - Web not reachable from LAN:
#     Ensure --bind is 0.0.0.0:8080 and port 8080 is allowed in your firewall.
#     > ss -tlnp | grep 8080   # verify Gunicorn is listening
# - PLC connection issues:
#     Check PLC_IP/PLC_PORT in config.py and physical network connectivity.
